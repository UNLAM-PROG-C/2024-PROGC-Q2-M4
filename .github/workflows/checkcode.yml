# This is a basic workflow to help you get started with Actions

name: "SOA Workflow"

# Controls when the workflow will run
on:
  push:
    branches-ignore:
      - main
      - develop
    
  workflow_dispatch:

jobs:
  validate-branch:
    name: "Run Validate Branch"
    runs-on: ubuntu-latest

    steps:
      - name: Get branch name
        id: get_branch_name
        run: echo "::set-output name=branch::$(echo ${GITHUB_REF#refs/heads/})"

      - name: Validate branch name
        if: ${{ github.event_name == 'push' || (github.event_name == 'pull_request' && github.base_ref != 'develop') }}
        run: |
          branch_name=${{ steps.get_branch_name.outputs.branch }}
          echo "Current branch: $branch_name"

          if [[ ! $branch_name =~ ^feature\/[a-zA-Z0-9._-]+$ ]]; then
            echo "Branch name does not match the required pattern."
            exit 1
          fi

  check-comments:
    name: "Run Check Comments"
    runs-on: ubuntu-latest
    needs: validate-branch

    steps:
      - uses: actions/checkout@v4

      - name: Find Java files with single-line comments
        run: |
          if grep -rn '//' --include='*.java' .; then exit 1; else exit 0; fi
        continue-on-error: false

      - name: Find Java files with block comments
        run: |
          if grep -rn '#' --include='*.py' . || grep -rn '/\*' --include='*.java' --include="*.c" --include="*.cpp" . || grep -rn '\*/' --include='*.java' --include="*.c" --include="*.cpp" .; then exit 1; else exit 0; fi
        continue-on-error: false
    
  check-bracket:
    name: "Run Check Bracket"
    runs-on: ubuntu-latest
    needs: check-comments

    steps:
      - uses: actions/checkout@v4

      - name: Find curly brackets in code
        run: |
          if grep -rn '[a-zA-Z0-9\\)].*{' --include='*.java' --include="*.cpp" --include="*.c" .; then exit 1; else exit 0; fi
